name: 📦 Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      package:
        description: "Package to release"
        required: true
        type: choice
        options:
          - core
          - mcp
          - all
      version:
        description: "Version type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: 📦 Release Packages
    runs-on: ubuntu-latest
    if: github.repository == 'codesearch-ai/codesearch'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build packages
        run: pnpm build

      - name: 🧪 Run tests
        run: pnpm test

      - name: 📦 Release Core Package
        if: github.event.inputs.package == 'core' || github.event.inputs.package == 'all' || startsWith(github.ref, 'refs/tags/')
        run: pnpm release:core
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📦 Release MCP Package
        if: github.event.inputs.package == 'mcp' || github.event.inputs.package == 'all' || startsWith(github.ref, 'refs/tags/')
        run: pnpm release:mcp
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    name: 🏷️ Create GitHub Release
    runs-on: ubuntu-latest
    needs: [release]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📝 Generate Release Notes
        id: release_notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Generate release notes (you might want to use a tool like conventional-changelog)
          echo "## What's Changed" > release_notes.md
          echo "" >> release_notes.md
          echo "### 🚀 Features" >> release_notes.md
          echo "### 🐛 Bug Fixes" >> release_notes.md
          echo "### 📖 Documentation" >> release_notes.md
          echo "### 🔧 Maintenance" >> release_notes.md
          echo "" >> release_notes.md
          echo "**Full Changelog**: https://github.com/codesearch-ai/codesearch/compare/v${{ steps.previous_tag.outputs.tag }}...v$VERSION" >> release_notes.md

      - name: 🏷️ Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.release_notes.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
